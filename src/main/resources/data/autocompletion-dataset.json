{
  "abstract": "A keyword in Java used to define abstract classes or methods.",
  "assert": "A statement for debugging purposes; tests a boolean condition.",
  "boolean": "A primitive data type in Java representing true or false.",
  "break": "A statement to exit a loop or switch-case prematurely.",
  "byte": "A primitive data type that represents an 8-bit integer.",
  "case": "A label in a switch statement to match a value.",
  "catch": "A block used to handle exceptions in a try-catch construct.",
  "char": "A primitive data type representing a single 16-bit Unicode character.",
  "class": "The building block of object-oriented programming in Java.",
  "continue": "A statement to skip the current iteration of a loop.",
  "default": "A keyword in a switch statement for the default case when no matches are found.",
  "double": "A primitive data type representing a double-precision 64-bit floating point.",
  "do": "A keyword for the do-while loop in Java.",
  "else": "A block of code executed if the condition in an if statement is false.",
  "enum": "A special class in Java representing a group of constants.",
  "extends": "A keyword that allows a class to inherit the properties and methods of another class.",
  "final": "A keyword that makes variables, methods, or classes immutable or unchangeable.",
  "finally": "A block in exception handling that executes after the try-catch, regardless of exceptions.",
  "float": "A primitive data type representing a 32-bit floating point number.",
  "for": "A loop construct that repeats a block of code a specific number of times.",
  "goto": "A reserved keyword in Java, but it is not used in the language.",
  "if": "A statement that executes a block of code if the specified condition is true.",
  "implements": "A keyword used to implement interfaces in Java.",
  "import": "A statement that brings other classes or packages into the current file.",
  "instanceof": "A keyword used to test if an object is an instance of a specific class or interface.",
  "int": "A primitive data type representing a 32-bit integer.",
  "interface": "A reference type in Java used to define a contract for classes.",
  "long": "A primitive data type representing a 64-bit integer.",
  "native": "A keyword used to specify that a method is implemented in native code (outside Java).",
  "new": "A keyword used to create new objects or arrays in Java.",
  "null": "A special literal representing the absence of any object or value.",
  "package": "A namespace used to group related classes, interfaces, and sub-packages.",
  "private": "An access modifier that restricts access to members of a class within that class only.",
  "protected": "An access modifier that allows access to members of a class within the same package and subclasses.",
  "public": "An access modifier that allows access to members of a class from anywhere.",
  "return": "A statement that exits a method and optionally returns a value.",
  "short": "A primitive data type representing a 16-bit integer.",
  "static": "A keyword used to declare class-level variables or methods, rather than instance-level.",
  "super": "A reference to the superclass of the current object, often used to access inherited methods.",
  "switch": "A statement that selects one of many code blocks to execute based on a matching value.",
  "synchronized": "A keyword used to ensure that only one thread can access a method or block of code at a time.",
  "this": "A reference to the current object within an instance method or constructor.",
  "throw": "A statement used to throw an exception manually.",
  "throws": "A keyword used in method declarations to specify that a method may throw exceptions.",
  "transient": "A keyword used to mark a field to be ignored by serialization.",
  "try": "A block of code that is tested for exceptions during execution.",
  "void": "A return type indicating that a method does not return any value.",
  "volatile": "A keyword used to indicate that a variable's value may be changed by other threads.",
  "while": "A loop construct that repeats a block of code as long as a specified condition is true.",
  "String": "A class in Java that represents a sequence of characters.",
  "Math": "A class in Java that provides basic mathematical functions like sine, cosine, square root, etc.",
  "System": "A class in Java that provides access to system-level resources, like input and output streams.",
  "Object": "The root class of the Java class hierarchy; all classes are derived from Object.",
  "Thread": "A class that allows concurrent execution of code in Java.",
  "Runnable": "An interface in Java that represents a task to be executed by a thread.",
  "ArrayList": "A resizable array implementation of the List interface in Java.",
  "HashMap": "A collection class that implements the Map interface and stores key-value pairs.",
  "LinkedList": "A doubly linked list implementation of the List and Deque interfaces in Java.",
  "Exception": "The superclass of all exception classes in Java, representing errors during execution.",
  "IOException": "A subclass of Exception that signals issues with input/output operations.",
  "File": "A class in Java used for file handling, such as reading and writing files.",
  "Scanner": "A class in Java used for parsing and reading input from various sources.",
  "Date": "A class in Java representing a specific point in time, often used for handling dates and times.",
  "SimpleDateFormat": "A class in Java for formatting and parsing dates in a locale-sensitive manner.",
  "UUID": "A class that provides methods to generate universally unique identifiers.",
  "Comparator": "An interface used to define custom ordering for objects in collections like List and Set.",
  "Iterator": "An interface that allows sequential access to elements in a collection.",
  "Collections": "A utility class that provides static methods for working with collections in Java.",
  "Arrays": "A utility class that provides static methods for working with arrays in Java.",
  "ThreadLocal": "A class that provides thread-local storage for variables in multi-threaded applications.",
  "JOptionPane": "A class used for creating standard dialog boxes in Java applications.",
  "Timer": "A class in Java that schedules tasks for future execution in a background thread.",
  "URL": "A class in Java used to represent Uniform Resource Locators, typically for web addresses.",
  "URLConnection": "A class in Java that provides an abstraction for HTTP and other types of connections.",
  "FileInputStream": "A class used for reading byte data from a file in Java.",
  "FileOutputStream": "A class used for writing byte data to a file in Java.",
  "ObjectInputStream": "A class that allows deserialization of objects in Java.",
  "ObjectOutputStream": "A class that allows serialization of objects in Java.",
  "Socket": "A class that provides networking capabilities for client-server communication in Java.",
  "ServerSocket": "A class used for establishing server-side socket connections in Java.",
  "PrintWriter": "A class in Java that simplifies writing formatted text to an output stream.",
  "BufferedReader": "A class used for reading text from an input stream, buffering for efficient reading.",
  "PrintStream": "A class that allows writing formatted text to an output stream, such as System.out.",
  "Properties": "A class used to manage key-value pairs, typically for configuration settings.",
  "ProcessBuilder": "A class used for creating and managing operating system processes.",
  "Runtime": "A class that provides access to the Java runtime environment, allowing interaction with the system.",
  "FileReader": "A class used to read character data from a file in Java.",
  "FileWriter": "A class used to write character data to a file in Java.",
  "StringBuilder": "A mutable sequence of characters used to efficiently manipulate strings in Java.",
  "StringBuffer": "A mutable sequence of characters that is synchronized, making it thread-safe.",
  "Random": "A class used for generating random numbers in Java.",
  "BigDecimal": "A class for performing arbitrary-precision decimal arithmetic in Java.",
  "BigInteger": "A class for handling arbitrarily large integers in Java.",
  "MathContext": "A class that encapsulates precision and rounding mode for mathematical operations.",
  "Locale": "A class that represents a specific geographical, political, or cultural region.",
  "Calendar": "A class used for manipulating and formatting dates in a flexible manner.",
  "GregorianCalendar": "A subclass of Calendar that implements the Gregorian calendar system.",
  "TimeZone": "A class used for handling time zone data in Java.",
  "ThreadGroup": "A class used for grouping threads in Java, to perform operations on multiple threads.",
  "Stack": "A class that represents a last-in, first-out (LIFO) stack of objects.",
  "Vector": "A class that implements a growable array of objects, like ArrayList but synchronized.",
  "WeakReference": "A reference type that allows the referenced object to be garbage collected.",
  "PhantomReference": "A reference type used for scheduling cleanup actions when an object is reclaimed by garbage collection.",
  "ReferenceQueue": "A class used in conjunction with reference types to track when objects are garbage collected.",
  "CountDownLatch": "A synchronization aid that allows one or more threads to wait until a set of operations is complete.",
  "CyclicBarrier": "A synchronization aid that allows a set of threads to wait for each other to reach a common barrier point.",
  "Semaphore": "A synchronization aid that restricts access to shared resources by multiple threads.",
  "ReentrantLock": "A lock that supports reentrancy, allowing the current thread to lock the same resource multiple times.",
  "ReadWriteLock": "An interface that allows concurrent reading but exclusive writing to a resource.",
  "Lock": "An interface for controlling access to shared resources in multi-threaded programming.",
  "ExecutorService": "An interface that provides a high-level replacement for managing threads directly in Java.",
  "Callable": "A functional interface representing a task that can be executed by a thread and returns a result.",
  "Future": "An interface representing the result of an asynchronous computation in Java.",
  "Executor": "An interface that provides a mechanism for executing tasks asynchronously in Java.",
  "ScheduledExecutorService": "An extension of ExecutorService that supports scheduling tasks with fixed-rate or fixed-delay policies.",
  "CompletableFuture": "A class that implements the Future interface and supports asynchronous programming with callbacks.",
  "ForkJoinPool": "A specialized implementation of ExecutorService that is optimized for parallelism with divide and conquer tasks.",
  "AtomicInteger": "A class that provides an atomic (thread-safe) integer value.",
  "AtomicLong": "A class that provides an atomic (thread-safe) long value.",
  "AtomicReference": "A class that provides an atomic reference to an object.",
  "CopyOnWriteArrayList": "A thread-safe variant of ArrayList where write operations create a copy of the underlying array.",
  "CopyOnWriteArraySet": "A thread-safe variant of HashSet where write operations create a copy of the underlying array.",
  "ConcurrentLinkedQueue": "A non-blocking, thread-safe queue implementation based on a linked node algorithm.",
  "LinkedBlockingQueue": "A thread-safe queue that supports operations such as insertion, removal, and polling of elements.",
  "PriorityBlockingQueue": "A thread-safe queue that orders elements based on their priority in a specified comparator.",
  "DelayQueue": "A blocking queue that holds elements until they become eligible for processing.",
  "ArrayBlockingQueue": "A bounded, thread-safe queue with a fixed capacity in Java.",
  "LinkedTransferQueue": "A highly-concurrent, non-blocking transfer queue that can be used for transferring elements between threads.",
  "parseInt": "A method in Integer class that parses a string and returns an integer value.",
  "parseDouble": "A method in Double class that parses a string and returns a double value.",
  "toString": "A method in Object class that returns a string representation of an object.",
  "clone": "A method in Object class that creates and returns a copy of the object.",
  "wait": "A method that makes the current thread wait until it is notified.",
  "notify": "A method that wakes up a single thread waiting on an object.",
  "notifyAll": "A method that wakes up all threads waiting on an object.",
  "hashCode": "A method in Object class that returns a hash code value for the object.",
  "equals": "A method in Object class used to compare the contents of two objects.",
  "finalize": "A method that is called before an object is destroyed by garbage collection.",
  "indexOf": "A method in String class that returns the index of the first occurrence of a specified character or substring.",
  "substring": "A method in String class that extracts a part of a string based on start and end indices.",
  "toUpperCase": "A method in String class that converts a string to uppercase.",
  "toLowerCase": "A method in String class that converts a string to lowercase.",
  "trim": "A method in String class that removes leading and trailing whitespace from a string.",
  "replace": "A method in String class that replaces occurrences of a specified character or substring.",
  "split": "A method in String class that splits a string into an array of substrings based on a delimiter."
}
